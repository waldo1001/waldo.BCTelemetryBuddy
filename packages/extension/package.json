{
    "name": "bc-telemetry-buddy",
    "displayName": "BC Telemetry Buddy",
    "description": "Query Business Central telemetry from VSCode using natural language with GitHub Copilot",
    "version": "0.1.0",
    "publisher": "waldo",
    "icon": "images/waldo.png",
    "engines": {
        "vscode": "^1.85.0"
    },
    "categories": [
        "Other",
        "Data Science"
    ],
    "keywords": [
        "business-central",
        "telemetry",
        "application-insights",
        "kusto",
        "kql",
        "copilot"
    ],
    "activationEvents": [
        "onStartupFinished"
    ],
    "main": "./dist/extension.js",
    "repository": {
        "type": "git",
        "url": "https://github.com/waldo1001/waldo.BCTelemetryBuddy.git"
    },
    "contributes": {
        "commands": [
            {
                "command": "bctb.startMCP",
                "title": "BC Telemetry Buddy: Start MCP Server"
            },
            {
                "command": "bctb.runNLQuery",
                "title": "BC Telemetry Buddy: Run Natural Language Query"
            },
            {
                "command": "bctb.saveQuery",
                "title": "BC Telemetry Buddy: Save Query"
            },
            {
                "command": "bctb.openQueriesFolder",
                "title": "BC Telemetry Buddy: Open Queries Folder"
            }
        ],
        "configuration": {
            "title": "BC Telemetry Buddy",
            "properties": {
                "bctb.mcp.connectionName": {
                    "type": "string",
                    "default": "",
                    "description": "Friendly name for this telemetry connection"
                },
                "bctb.mcp.tenantId": {
                    "type": "string",
                    "default": "",
                    "description": "Azure tenant ID (not needed for azure_cli flow, which uses current az login session)"
                },
                "bctb.mcp.clientId": {
                    "type": "string",
                    "default": "",
                    "description": "Azure client ID (not needed for azure_cli or device_code flows, required for client_credentials)"
                },
                "bctb.mcp.authFlow": {
                    "type": "string",
                    "enum": [
                        "azure_cli",
                        "device_code",
                        "client_credentials"
                    ],
                    "default": "azure_cli",
                    "description": "Authentication flow to use (azure_cli uses 'az login' cached credentials, device_code requires browser login each time, client_credentials uses service principal)"
                },
                "bctb.mcp.applicationInsights.appId": {
                    "type": "string",
                    "default": "",
                    "description": "Application Insights application ID"
                },
                "bctb.mcp.kusto.clusterUrl": {
                    "type": "string",
                    "default": "",
                    "description": "Kusto cluster URL"
                },
                "bctb.mcp.cache.enabled": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enable file-based caching"
                },
                "bctb.mcp.cache.ttlSeconds": {
                    "type": "number",
                    "default": 3600,
                    "description": "Cache TTL in seconds"
                },
                "bctb.mcp.sanitize.removePII": {
                    "type": "boolean",
                    "default": false,
                    "description": "Enable PII sanitization (opt-in)"
                },
                "bctb.mcp.port": {
                    "type": "number",
                    "default": 52345,
                    "description": "MCP server port"
                },
                "bctb.mcp.url": {
                    "type": "string",
                    "default": "http://localhost:52345",
                    "description": "MCP server URL"
                },
                "bctb.agent.maxRetries": {
                    "type": "number",
                    "default": 3,
                    "description": "Maximum retry attempts for failed queries"
                },
                "bctb.queries.folder": {
                    "type": "string",
                    "default": "queries",
                    "description": "Folder for saved KQL queries (relative to workspace root)"
                },
                "bctb.mcp.references": {
                    "type": "array",
                    "default": [],
                    "description": "External reference sources for KQL examples",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Reference name"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "github",
                                    "web"
                                ],
                                "description": "Reference type"
                            },
                            "url": {
                                "type": "string",
                                "description": "Reference URL"
                            },
                            "enabled": {
                                "type": "boolean",
                                "description": "Enable this reference"
                            }
                        }
                    }
                }
            }
        }
    },
    "scripts": {
        "vscode:prepublish": "npm run build",
        "build": "tsc",
        "dev": "tsc --watch",
        "test": "jest",
        "test:coverage": "jest --coverage",
        "test:integration": "npm run build && node ./dist/test/runTest.js",
        "package": "vsce package",
        "clean": "rimraf dist out"
    },
    "dependencies": {
        "axios": "^1.6.0"
    },
    "devDependencies": {
        "@types/vscode": "^1.85.0",
        "@types/node": "^18.0.0",
        "@types/jest": "^29.5.0",
        "@vscode/test-electron": "^2.3.0",
        "jest": "^29.7.0",
        "ts-jest": "^29.1.0",
        "typescript": "^5.3.0",
        "@vscode/vsce": "^2.22.0",
        "rimraf": "^5.0.0"
    }
}